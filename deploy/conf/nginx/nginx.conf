user www-data;

# How many worker threads to run;
# "auto" sets it to the number of CPU cores available in the system, and
# offers the best performance. Don't set it higher than the number of CPU
# cores if changing this parameter.
#
# The maximum number of connections for Nginx is calculated by:
# max_clients = worker_processes * worker_connections
worker_processes auto;

# Maximum open file descriptors per process; should be > worker_connections.
worker_rlimit_nofile 8192;

pid /run/nginx.pid;

events {
    # When you need > 8000 * cpu_cores connections, you start optimizing your OS,
    # and this is probably the point at which you hire people who are smarter than
    # you, as this is *a lot* of requests.
	worker_connections 4096;
    
    # optimized to serve many clients with each thread, essential for linux
    # use [ kqueue | rtsig | epoll | /dev/poll | select | poll ] ;
    use epoll;
	
    # accept as many connections as possible, may flood worker connections if set too low
    multi_accept on;
}

http {

	##
	# Basic Settings
	##
    
    # Speed up file transfers by using sendfile() to copy directly
    # between descriptors rather than using read()/write().
	sendfile on;
    
    # send headers in one peace, its better then sending them one by one
	tcp_nopush on;
    
    # don't buffer data sent, good for small data bursts in real time
	tcp_nodelay on;
    
    # 10m (10 minutes) is value to high for production, but reasonable for debugging in development
	keepalive_timeout 75;
	keepalive_requests 100;
	types_hash_max_size 2048;
	# server_tokens off;
	add_header X-what-my-server obelix;
    
	client_max_body_size 20M;
	client_body_timeout 10m;
	client_header_timeout 10m;
    
	fastcgi_send_timeout 10m;
	fastcgi_read_timeout 10m;
	fastcgi_connect_timeout 75;
	send_timeout 10m;
    
    #open_file_cache max=200000 inactive=20s; 
	#open_file_cache_valid 30s; 
	#open_file_cache_min_uses 2;
	open_file_cache_errors off;

	# server_names_hash_bucket_size 64;
	# server_name_in_redirect off;

	include /etc/nginx/mime.types;
	default_type application/octet-stream;

	##
	# Logging Settings
	##

	#access_log /var/log/nginx/access.log;
	error_log /var/log/nginx/error.log crit;

	##
	# Gzip Settings
	##

	gzip on;
	gzip_disable "msie6";

	 gzip_vary on;
	# gzip_proxied any;
	 gzip_comp_level 6;
	 gzip_buffers 16 8k;
	 gzip_http_version 1.1;
	 gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;
    
    gzip_min_length 10240;
	gzip_proxied expired no-cache no-store private auth;
    
    reset_timedout_connection on;

	##
	# nginx-naxsi config
	##
	# Uncomment it if you installed nginx-naxsi
	##

	#include /etc/nginx/naxsi_core.rules;

	##
	# nginx-passenger config
	##
	# Uncomment it if you installed nginx-passenger
	##
	
	#passenger_root /usr;
	#passenger_ruby /usr/bin/ruby;

	##
	# Virtual Host Configs
	##

	include /etc/nginx/conf.d/*.conf;
	include /etc/nginx/sites-enabled/*;
}


#mail {
#	# See sample authentication script at:
#	# http://wiki.nginx.org/ImapAuthenticateWithApachePhpScript
# 
#	# auth_http localhost/auth.php;
#	# pop3_capabilities "TOP" "USER";
#	# imap_capabilities "IMAP4rev1" "UIDPLUS";
# 
#	server {
#		listen     localhost:110;
#		protocol   pop3;
#		proxy      on;
#	}
# 
#	server {
#		listen     localhost:143;
#		protocol   imap;
#		proxy      on;
#	}
#}
